#!/bin/bash

function show_help()
{
    echo "GamutRF, an application that leverages software defined radios (SDR) to orchestrate the scanning and collecting of signals. For more info visit: https://github.com/IQTLabs/poseidon

Usage: gamutrf [option] [additional run arguments]
Options:
    -h,  help          print this help
    -i,  install       install GamutRF repo, optionally supply a version, tag, branch, or tarball
    -l,  logs          tail GamutRF logs
    -r,  run           specify GamutRF tool to run (and any additional args for the tools), options include: 'api', 'freqxlator', 'samples2raw', 'scan', 'sigfinder', 'specgram'
    -R,  restart       specify 'orchestrator' or 'worker' to restart
    -s,  start         specify 'orchestrator' or 'worker' to start
    -S,  stop          specify 'orchestrator' or 'worker' to stop
    -t,  status        get status of GamutRF
    -U,  uninstall     uninstall GamutRF repo
    -u,  update        update the GamutRF repo, optionally supply a version, tag, branch, or tarball
    -V,  version       get the version installed

Environment Variables:
    ANTENNA            label to call the antenna type (default: omni)
    DATA_DIR           path used to map data into or out of a tool that is run (default: current working directory)
    FREQ_START         override the starting frequency (default: 70e6)
    FREQ_END           override the ending frequency (default: 6e9)
    ORCHESTRATOR       ip address of the host running the orchestrator (default: 192.168.111.10)
    VERSION            override the version to run (default: latest)
    VOL_PREFIX         override the installation location (default: '')
    WORKER_NAME        label to call the worker (default: worker1)"
}

function die()
{
    printf '%s\n' "$1" >&2
    exit 1
}

function check_args()
{
    for req_cmd in docker git uhd_find_devices ; do
            $req_cmd --help > /dev/null || die "$req_cmd must be installed"
    done

    if [[ -z "${DATA_DIR}" ]]; then
        VOLUME_DIR=`pwd`
    else
        VOLUME_DIR="${DATA_DIR}"
    fi
    if [[ -z "${FREQ_START}" ]]; then
        FS=70e6
    else
        FS="${FREQ_START}"
    fi
    if [[ -z "${FREQ_END}" ]]; then
        FE=6e9
    else
        FE="${FREQ_END}"
    fi
    if [[ -z "${ANTENNA}" ]]; then
        ANT=omni
    else
        ANT="${ANTENNA}"
    fi
    if [[ -z "${WORKER_NAME}" ]]; then
        WORKER=worker1
    else
        WORKER="${WORKER_NAME}"
    fi
    if [[ -z "${VERSION}" ]]; then
        VERS=latest
    else
        VERS="${VERSION}"
    fi
    if [[ -z "${ORCHESTRATOR}" ]]; then
        ORC=192.168.111.10
    else
        ORC="${ORCHESTRATOR}"
    fi
    GAMUTRF_DIR="$VOL_PREFIX"/opt/gamutrf

    while :; do
        case $1 in
            -h|\?|help)
                show_help
                exit
                ;;
            -i|install)
                if [ -d "$GAMUTRF_DIR" ] ; then
                    echo "GamutRF is already installed at $GAMUTRF_DIR"
                    exit
                fi
                mkdir -p "$GAMUTRF_DIR" > /dev/null 2>&1
                if [ -z "$2" ]; then
                    git clone https://github.com/iqtlabs/gamutrf "$GAMUTRF_DIR"
                    pushd "$GAMUTRF_DIR" || exit
                    git checkout "$(git describe --tags --abbrev=0)"
                    popd || exit
                else
                    if [ -f "$2" ] ; then
                        tar -C "$GAMUTRF_DIR" -xvf "$2" --strip=1
                    else
                        git clone https://github.com/iqtlabs/gamutrf "$GAMUTRF_DIR"
                        pushd "$GAMUTRF_DIR" || exit
                        git checkout "$2"
                        popd || exit
                    fi
                fi
                exit
                ;;
            -l|logs)
                if [ -z "$2" ]; then
                    echo "Specify 'orchestrator' or 'worker' to get logs for"
                    exit
                fi
                if [ "$2" == "orchestrator" ]; then
                    if [ ! -f "$VOL_PREFIX"/opt/gamutrf/orchestrator.yml ]; then
                        echo "GamutRF not installed!"
                    else
                        pushd "$GAMUTRF_DIR" || exit
                        VOL_PREFIX=/flash/gamutrf/ FREQ_START="$FS" FREQ_END="$FE" docker compose -f orchestrator.yml logs -f 
                        popd || exit
                    fi
                elif [ "$2" == "worker" ]; then
                    if [ ! -f "$VOL_PREFIX"/opt/gamutrf/worker.yml ]; then
                        echo "GamutRF not installed!"
                    else
                        pushd "$GAMUTRF_DIR" || exit
                        VOL_PREFIX=/flash/ ORCHESTRATOR="$ORC" WORKER_NAME="$WORKER" ANTENNA="$ANT" docker compose -f worker.yml logs -f
                        popd || exit
                    fi
                else
                    echo "Specify 'orchestrator' or 'worker' to get logs for"
                    exit
                fi
                exit
                ;;
            -r|run)
                if [ -z "$2" ]; then
                    echo "Specify 'api', 'freqxlator', 'samples2raw', 'scan', 'sigfinder', or 'specgram' to run"
                    exit
                fi
                docker run -it -v "$VOLUME_DIR":/data iqtlabs/gamutrf:"$VERS" gamutrf-"$2" "${@:3}"
                exit
                ;;
            -R|restart)
                if [ -z "$2" ]; then
                    echo "Specify 'orchestrator' or 'worker' to restart"
                    exit
                fi
                if [ "$2" == "orchestrator" ]; then
                    if [ ! -f "$VOL_PREFIX"/opt/gamutrf/orchestrator.yml ]; then
                        echo "GamutRF not installed!"
                    else
                        pushd "$GAMUTRF_DIR" || exit
                        VOL_PREFIX=/flash/gamutrf/ FREQ_START="$FS" FREQ_END="$FE" docker compose -f orchestrator.yml down
                        UHD_IMAGES_DIR=/usr/share/uhd/images uhd_find_devices
                        VOL_PREFIX=/flash/gamutrf/ FREQ_START="$FS" FREQ_END="$FE" docker compose -f orchestrator.yml up -d
                        popd || exit
                    fi
                elif [ "$2" == "worker" ]; then
                    if [ ! -f "$VOL_PREFIX"/opt/gamutrf/worker.yml ]; then
                        echo "GamutRF not installed!"
                    else
                        pushd "$GAMUTRF_DIR" || exit
                        VOL_PREFIX=/flash/ ORCHESTRATOR="$ORC" WORKER_NAME="$WORKER" ANTENNA="$ANT" docker compose -f worker.yml down
                        UHD_IMAGES_DIR=/usr/share/uhd/images uhd_find_devices
                        VOL_PREFIX=/flash/ ORCHESTRATOR="$ORC" WORKER_NAME="$WORKER" ANTENNA="$ANT" docker compose -f worker.yml up -d
                        popd || exit
                    fi
                else
                    echo "Specify 'orchestrator' or 'worker' to restart"
                    exit
                fi
                exit
                ;;
            -s|start)
                if [ -z "$2" ]; then
                    echo "Specify 'orchestrator' or 'worker' to start"
                    exit
                fi
                if [ "$2" == "orchestrator" ]; then
                    if [ ! -f "$VOL_PREFIX"/opt/gamutrf/orchestrator.yml ]; then
                        echo "GamutRF not installed!"
                    else
                        pushd "$GAMUTRF_DIR" || exit
                        UHD_IMAGES_DIR=/usr/share/uhd/images uhd_find_devices
                        VOL_PREFIX=/flash/gamutrf/ FREQ_START="$FS" FREQ_END="$FE" docker compose -f orchestrator.yml up -d
                        popd || exit
                    fi
                elif [ "$2" == "worker" ]; then
                    if [ ! -f "$VOL_PREFIX"/opt/gamutrf/worker.yml ]; then
                        echo "GamutRF not installed!"
                    else
                        pushd "$GAMUTRF_DIR" || exit
                        UHD_IMAGES_DIR=/usr/share/uhd/images uhd_find_devices
                        VOL_PREFIX=/flash/ ORCHESTRATOR="$ORC" WORKER_NAME="$WORKER" ANTENNA="$ANT" docker compose -f worker.yml up -d
                        popd || exit
                    fi
                else
                    echo "Specify 'orchestrator' or 'worker' to start"
                    exit
                fi
                exit
                ;;
            -S|stop)
                if [ -z "$2" ]; then
                    echo "Specify 'orchestrator' or 'worker' to stop"
                    exit
                fi
                if [ "$2" == "orchestrator" ]; then
                    if [ ! -f "$VOL_PREFIX"/opt/gamutrf/orchestrator.yml ]; then
                        echo "GamutRF not installed!"
                    else
                        pushd "$GAMUTRF_DIR" || exit
                        VOL_PREFIX=/flash/gamutrf/ docker compose -f orchestrator.yml down
                        popd || exit
                    fi
                elif [ "$2" == "worker" ]; then
                    if [ ! -f "$VOL_PREFIX"/opt/gamutrf/worker.yml ]; then
                        echo "GamutRF not installed!"
                    else
                        pushd "$GAMUTRF_DIR" || exit
                        VOL_PREFIX=/flash/ docker compose -f worker.yml down
                        popd || exit
                    fi
                else
                    echo "Specify 'orchestrator' or 'worker' to stop"
                    exit
                fi
                exit
                ;;
            -t|status)
                if [ -z "$2" ]; then
                    echo "Specify 'orchestrator' or 'worker' to get status for"
                    exit
                fi
                if [ "$2" == "orchestrator" ]; then
                    if [ ! -f "$VOL_PREFIX"/opt/gamutrf/orchestrator.yml ]; then
                        echo "GamutRF not installed!"
                    else
                        pushd "$GAMUTRF_DIR" || exit
                        VOL_PREFIX=/flash/gamutrf/ FREQ_START="$FS" FREQ_END="$FE" docker compose -f orchestrator.yml ps
                        popd || exit
                    fi
                elif [ "$2" == "worker" ]; then
                    if [ ! -f "$VOL_PREFIX"/opt/gamutrf/worker.yml ]; then
                        echo "GamutRF not installed!"
                    else
                        pushd "$GAMUTRF_DIR" || exit
                        VOL_PREFIX=/flash/ ORCHESTRATOR="$ORC" WORKER_NAME="$WORKER" ANTENNA="$ANT" docker compose -f worker.yml ps
                        popd || exit
                    fi
                else
                    echo "Specify 'orchestrator' or 'worker' to get status for"
                    exit
                fi
                exit
                ;;
            -U|uninstall)
                if [ -d "$GAMUTRF_DIR" ] ; then
                    if [ -f "$VOL_PREFIX"/opt/gamutrf/orchestrator.yml ]; then
                        pushd "$GAMUTRF_DIR" || exit
                        VOL_PREFIX=/flash/gamutrf/ docker compose -f orchestrator.yml down
                        popd || exit
                    fi
                    if [ -f "$VOL_PREFIX"/opt/gamutrf/worker.yml ]; then
                        pushd "$GAMUTRF_DIR" || exit
                        VOL_PREFIX=/flash/gamutrf/ docker compose -f worker.yml down
                        popd || exit
                    fi
                    rm -rf "$GAMUTRF_DIR"
                else
                    echo "GamutRF is not already installed"
                    exit
                fi
                exit
                ;;
            -u|update)
                if [ -d "$GAMUTRF_DIR" ] ; then
                    if [ -z "$2" ]; then
                        pushd "$GAMUTRF_DIR" || exit
                        git checkout "$(git describe --tags --abbrev=0)"
                        popd || exit
                    else
                        if [ -f "$2" ] ; then
                            tar -C "$GAMUTRF_DIR" -xvf "$2" --strip=1
                        else
                            pushd "$GAMUTRF_DIR" || exit
                            git checkout "$2"
                            popd || exit
                        fi
                    fi
                else
                    echo "GamutRF is not already installed"
                    exit
                fi
                exit
                ;;
            -V|version)
                if [ ! -f "$VOL_PREFIX"/opt/gamutrf/pyproject.toml ]; then
                    echo "GamutRF not installed!"
                else
                    sed '3q;d' "$VOL_PREFIX"/opt/gamutrf/pyproject.toml | cut -d '"' -f 2
                fi
                exit
                ;;
            ?*)
                printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
                ;;
            *)
                break
        esac
        shift
    done
}

if [ $# -gt 0 ]; then
    if [[ ( $# -eq 2 && $1 == "install" ) || ( $# -eq 2 && $1 == "-i" ) || ( $# -eq 2 && $1 == "logs" ) || ( $# -eq 2 && $1 == "-l" ) || ( $# -gt 1 && $1 == "run" ) || ( $# -gt 1 && $1 == "-r" ) || ( $# -eq 2 && $1 == "restart" ) || ( $# -eq 2 && $1 == "-R" ) || ( $# -eq 2 && $1 == "start" ) || ( $# -eq 2 && $1 == "-s" ) || ( $# -eq 2 && $1 == "stop" ) || ( $# -eq 2 && $1 == "-S" ) || ( $# -eq 2 && $1 == "uninstall" ) || ( $# -eq 2 && $1 == "update" ) || ( $# -eq 2 && $1 == "status" ) || ( $# -eq 2 && $1 == "-t" ) || ( $# -eq 2 && $1 == "-u" ) || ( $# -eq 2 && $1 == "-u" ) || ( $# -eq 1 ) ]]; then
        check_args "$@"
    else
        show_help
    fi
else # print help
    show_help
fi
