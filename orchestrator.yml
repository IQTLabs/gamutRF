version: "3.3"
networks:
  gamutrf:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 9000
services:
  compass:
    restart: always
    image: iqtlabs/pibackbone-compass:v0.4.5
    networks:
      - gamutrf
    devices:
      - "/dev/i2c-1:/dev/i2c-1"
    ports:
      - '8000:8000'
    command:
      # Set correct compass settings for your compass and location
      - --compass=qmc5883l
      - --calibration=0
      - --declination=0
  mqtt:
    restart: always
    image: iqtlabs/gamutrf-mqtt:latest
    networks:
      - gamutrf
    ports:
      - '1883:1883'
  gamutrf:
    restart: always
    image: iqtlabs/gamutrf:latest
    depends_on:
      sigfinder:
        condition: service_started
    networks:
      - gamutrf
    ports:
      - '9001:9000'
      - '10000:10000'
    cap_add:
      - SYS_NICE
      - SYS_RAWIO
    devices:
      - /dev/bus/usb:/dev/bus/usb
    command:
      - gamutrf-scan
      - --logaddr=0.0.0.0
      - --logport=10000
      - --igain=40
      - '--freq-start=${FREQ_START}'
      - '--freq-end=${FREQ_END}'
      - --samp-rate=8.192e6
      - --nfft=2048
      - --sweep-sec=30
    healthcheck:
      test: [CMD, "/gamutrf/bin/scanhc.sh", "9000"]
      interval: 10s
      timeout: 10s
      retries: 3
  sigfinder:
    restart: always
    image: iqtlabs/gamutrf:latest
    shm_size: 128m 
    privileged: true
    networks:
      - gamutrf
    ports:
      - '80:80'
      - '9002:9000'
    volumes:
      - '${VOL_PREFIX}:/logs'
    command:
      - gamutrf-sigfinder
      - --scanners=gamutrf:10000
      - --log=/logs/scan.csv
      - --width=10
      - --prominence=2
      - --threshold=-25
      - --record_secs=1
      - --max_recorder_signals=5
    environment:
      - "PEAK_TRIGGER=0"
      - "PIN_TRIGGER=17"
  waterfall:
    restart: always
    image: iqtlabs/gamutrf:latest
    networks:
      - gamutrf
    ports:
      - '9003:9003'
    volumes:
      - '${VOL_PREFIX}:/logs'
    command:
      - gamutrf-waterfall
      - --scanners=gamutrf:10000
      - --save_path=/logs
      - --port=9003
      - --min_freq=100e6
      - --max_freq=1e9
  watchtower:
    image: containrrr/watchtower:latest
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - "WATCHTOWER_POLL_INTERVAL=3600"
      - "WATCHTOWER_CLEANUP=true"
      - "WATCHTOWER_INCLUDE_RESTARTING=true"
      - "WATCHTOWER_INCLUDE_STOPPED=true"
      - "WATCHTOWER_REVIVE_STOPPED=true"
