[tool.poetry]
name = "gamutrf"
version = "0.5.24"
description = "An orchestrated SDR scanner"
authors = ["cglewis <clewis@iqt.org>"]
license = "Apache-2.0"
readme = "README.md"
packages = [
    { include = "gamutrf" },
]

[tool.poetry.dependencies]
python = ">=3.9 <3.11"
bjoern = "3.2.2"
falcon = "3.1.1"
falcon-cors = "1.1.7"
findpeaks = "2.4.7"
gpsd-py3 = "0.3.0"
httpx = "0.24.1"
Jinja2 = "3.1.2"
matplotlib = "3.7.2"
numpy = "1.25.0"
paho-mqtt = "1.6.1"
pandas = "2.0.3"
prometheus_client = "0.17.0"
requests = "2.31.0"
"RPi.GPIO" = {version = "0.7.1", markers = "platform_machine != 'aarch64'"}
schedule = "1.2.0"
scipy = "1.11.1"
sigmf = "1.1.1"
zstandard = "0.21.0"
pycairo = "^1.21.0"
cairocffi = "^1.3.0"
Flask = "2.3.2"
opencv-python = "^4.7.0"

[tool.poetry.dev-dependencies]
attr = "0.3.2"
attrs = "23.1.0"
black = "23.3.0"
docker = "6.1.3"
pylint = "2.17.4"
pytest = "7.4.0"
pytest-cov = "4.1.0"
pytype = "2023.6.16"

[tool.poetry.scripts]
gamutrf-api = 'gamutrf.__main__:api'
gamutrf-freqxlator = 'gamutrf.__main__:freqxlator'
gamutrf-samples2raw = 'gamutrf.__main__:samples2raw'
gamutrf-scan = 'gamutrf.__main__:scan'

gamutrf-sigfinder = 'gamutrf.__main__:sigfinder'
gamutrf-specgram = 'gamutrf.__main__:specgram'

gamutrf-waterfall = 'gamutrf.__main__:waterfall'

[tool.poetry.urls]
homepage = "https://github.com/IQTLabs/gamutRF"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
