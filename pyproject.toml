[tool.poetry]
name = "gamutrf"
version = "0.5.52"
description = "An orchestrated SDR scanner"
authors = ["cglewis <clewis@iqt.org>"]
license = "Apache-2.0"
readme = "README.md"
packages = [
    { include = "gamutrf" },
]

[tool.poetry.dependencies]
"RPi.GPIO" = {version = "0.7.1", markers = "platform_machine != 'aarch64'"}
Flask = "3.0.2"
Jinja2 = "3.1.3"
bjoern = "3.2.2"
cairocffi = "1.6.1"
falcon = "3.1.3"
falcon-cors = "1.1.7"
gpsd-py3 = "0.3.0"
matplotlib = "3.8.3"
numpy = "1.26.4"
paho-mqtt = "2.0.0"
pandas = "2.2.1"
prometheus_client = "0.20.0"
pycairo = "1.26.0"
python = ">=3.9,<3.13"
pyzmq = "25.1.2"
requests = "2.31.0"
schedule = "1.2.1"
scipy = "1.12.0"
sigmf = "1.2.0"
sysrsync = "1.1.1"
webcolors = "1.13"
zstandard = "0.22.0"

[tool.poetry.dev-dependencies]
attr = "0.3.2"
attrs = "23.2.0"
black = "24.2.0"
docker = "7.0.0"
pdbpp = "^0.10.3"
pylint = "3.1.0"
pytest = "8.1.1"
pytest-cov = "4.1.0"
pytype = "2024.3.11"

[tool.poetry.scripts]
gamutrf-compress_dirs = 'gamutrf.__main__:compress_dirs'
gamutrf-offline= 'gamutrf.__main__:offline'
gamutrf-scan = 'gamutrf.__main__:scan'
gamutrf-sigfinder = 'gamutrf.__main__:sigfinder'
gamutrf-specgram = 'gamutrf.__main__:specgram'
gamutrf-waterfall = 'gamutrf.__main__:waterfall'
gamutrf-worker = 'gamutrf.__main__:worker'

[tool.poetry.urls]
homepage = "https://github.com/IQTLabs/gamutRF"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
